CLASS
TYPEID Main
INHERITS
TYPEID IO
'{'
OBJECTID main
'('
')'
':'
TYPEID SELF
LEXER BUG - UNMATCHED: _
TYPEID TYPE
'{'
'('
OBJECTID let
OBJECTID c
':'
TYPEID Complex
ASSIGN
'('
OBJECTID new
TYPEID Complex
')'
'.'
OBJECTID init
'('
INT_CONST 1
','
INT_CONST 1
')'
IN
'{'
'-'
'-'
OBJECTID trivially
OBJECTID equal
'('
OBJECTID see
TYPEID CoolAid
')'
IF
OBJECTID c
'.'
OBJECTID reflect
LEXER BUG - UNMATCHED: _
TYPEID X
'('
')'
'='
OBJECTID c
'.'
OBJECTID reflect
LEXER BUG - UNMATCHED: _
INT_CONST 0
'('
')'
OBJECTID then
OBJECTID out
LEXER BUG - UNMATCHED: _
OBJECTID string
'('
STR_CONST "=)\\n"
')'
OBJECTID else
OBJECTID out
LEXER BUG - UNMATCHED: _
OBJECTID string
'('
STR_CONST "=(\\n"
')'
FI
';'
'-'
'-'
OBJECTID equal
IF
OBJECTID c
'.'
OBJECTID reflect
LEXER BUG - UNMATCHED: _
TYPEID X
'('
')'
'.'
OBJECTID reflect
LEXER BUG - UNMATCHED: _
TYPEID Y
'('
')'
'.'
OBJECTID equal
'('
OBJECTID c
'.'
OBJECTID reflect
LEXER BUG - UNMATCHED: _
INT_CONST 0
'('
')'
')'
OBJECTID then
OBJECTID out
LEXER BUG - UNMATCHED: _
OBJECTID string
'('
STR_CONST "=)\\n"
')'
OBJECTID else
OBJECTID out
LEXER BUG - UNMATCHED: _
OBJECTID string
'('
STR_CONST "=(\\n"
')'
FI
';'
'}'
')'
'}'
';'
'}'
';'
CLASS
TYPEID Complex
INHERITS
TYPEID IO
'{'
OBJECTID x
':'
TYPEID Int
';'
OBJECTID y
':'
TYPEID Int
';'
OBJECTID init
'('
OBJECTID a
':'
TYPEID Int
','
OBJECTID b
':'
TYPEID Int
')'
':'
TYPEID Complex
'{'
'{'
OBJECTID x
'='
OBJECTID a
';'
OBJECTID y
'='
OBJECTID b
';'
OBJECTID self
';'
'}'
'}'
';'
OBJECTID print
'('
')'
':'
TYPEID Object
'{'
IF
OBJECTID y
'='
INT_CONST 0
OBJECTID then
OBJECTID out
LEXER BUG - UNMATCHED: _
OBJECTID int
'('
OBJECTID x
')'
OBJECTID else
OBJECTID out
LEXER BUG - UNMATCHED: _
OBJECTID int
'('
OBJECTID x
')'
'.'
OBJECTID out
LEXER BUG - UNMATCHED: _
OBJECTID string
'('
STR_CONST "+"
')'
'.'
OBJECTID out
LEXER BUG - UNMATCHED: _
OBJECTID int
'('
OBJECTID y
')'
'.'
OBJECTID out
LEXER BUG - UNMATCHED: _
OBJECTID string
'('
STR_CONST "I"
')'
FI
'}'
';'
OBJECTID reflect
LEXER BUG - UNMATCHED: _
INT_CONST 0
'('
')'
':'
TYPEID Complex
'{'
'{'
OBJECTID x
'='
'~'
OBJECTID x
';'
OBJECTID y
'='
'~'
OBJECTID y
';'
OBJECTID self
';'
'}'
'}'
';'
OBJECTID reflect
LEXER BUG - UNMATCHED: _
TYPEID X
'('
')'
':'
TYPEID Complex
'{'
'{'
OBJECTID y
'='
'~'
OBJECTID y
';'
OBJECTID self
';'
'}'
'}'
';'
OBJECTID reflect
LEXER BUG - UNMATCHED: _
TYPEID Y
'('
')'
':'
TYPEID Complex
'{'
'{'
OBJECTID x
'='
'~'
OBJECTID x
';'
OBJECTID self
';'
'}'
'}'
';'
OBJECTID equal
'('
OBJECTID d
':'
TYPEID Complex
')'
':'
TYPEID Bool
'{'
IF
OBJECTID x
'='
OBJECTID d
'.'
OBJECTID x
LEXER BUG - UNMATCHED: _
OBJECTID value
'('
')'
OBJECTID then
IF
OBJECTID y
'='
OBJECTID d
'.'
OBJECTID y
LEXER BUG - UNMATCHED: _
OBJECTID value
'('
')'
OBJECTID then
BOOL_CONST true
OBJECTID else
BOOL_CONST false
FI
OBJECTID else
BOOL_CONST false
FI
'}'
';'
OBJECTID x
LEXER BUG - UNMATCHED: _
OBJECTID value
'('
')'
':'
TYPEID Int
'{'
OBJECTID x
'}'
';'
OBJECTID y
LEXER BUG - UNMATCHED: _
OBJECTID value
'('
')'
':'
TYPEID Int
'{'
OBJECTID y
'}'
';'
'}'
';'
