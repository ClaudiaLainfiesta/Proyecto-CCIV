0a1,337
> '('
> '*'
> '*'
> TYPEID The
> TYPEID IO
> CLASS
> OBJECTID is
> OBJECTID predefined
> OBJECTID and
> OBJECTID has
> INT_CONST 4
> OBJECTID methods
> ':'
> '*'
> '*'
> OBJECTID out
> LEXER BUG - UNMATCHED: _
> OBJECTID string
> '('
> OBJECTID s
> ':'
> TYPEID String
> ')'
> ':'
> TYPEID SELF
> LEXER BUG - UNMATCHED: _
> TYPEID TYPE
> '*'
> OBJECTID out
> LEXER BUG - UNMATCHED: _
> OBJECTID int
> '('
> OBJECTID i
> ':'
> TYPEID Int
> ')'
> ':'
> TYPEID SELF
> LEXER BUG - UNMATCHED: _
> TYPEID TYPE
> '*'
> IN
> LEXER BUG - UNMATCHED: _
> OBJECTID string
> '('
> ')'
> ':'
> TYPEID String
> '*'
> IN
> LEXER BUG - UNMATCHED: _
> OBJECTID int
> '('
> ')'
> ':'
> TYPEID Int
> '*'
> '*'
> TYPEID The
> OBJECTID out
> OBJECTID operations
> OBJECTID print
> OBJECTID their
> OBJECTID argument
> OBJECTID to
> OBJECTID the
> OBJECTID terminal
> '.'
> TYPEID The
> '*'
> IN
> LEXER BUG - UNMATCHED: _
> OBJECTID string
> OBJECTID method
> OBJECTID reads
> OBJECTID an
> OBJECTID entire
> OBJECTID line
> OBJECTID from
> OBJECTID the
> OBJECTID terminal
> OBJECTID and
> OBJECTID returns
> OBJECTID a
> '*'
> OBJECTID string
> NOT
> OBJECTID containing
> OBJECTID the
> OBJECTID new
> OBJECTID line
> '.'
> TYPEID The
> IN
> LEXER BUG - UNMATCHED: _
> OBJECTID int
> OBJECTID method
> OBJECTID also
> OBJECTID reads
> '*'
> OBJECTID an
> OBJECTID entire
> OBJECTID line
> OBJECTID from
> OBJECTID the
> OBJECTID terminal
> OBJECTID and
> OBJECTID returns
> OBJECTID the
> OBJECTID integer
> '*'
> OBJECTID corresponding
> OBJECTID to
> OBJECTID the
> OBJECTID first
> OBJECTID non
> OBJECTID blank
> OBJECTID word
> OBJECTID on
> OBJECTID the
> OBJECTID line
> '.'
> IF
> OBJECTID that
> '*'
> OBJECTID word
> OBJECTID is
> NOT
> OBJECTID an
> OBJECTID integer
> ','
> OBJECTID it
> OBJECTID returns
> INT_CONST 0
> '.'
> '*'
> '*'
> '*'
> TYPEID Because
> OBJECTID our
> OBJECTID language
> OBJECTID is
> OBJECTID object
> OBJECTID oriented
> ','
> OBJECTID we
> OBJECTID need
> OBJECTID an
> OBJECTID object
> OF
> OBJECTID type
> '*'
> TYPEID IO
> IN
> OBJECTID order
> OBJECTID to
> OBJECTID call
> OBJECTID any
> OF
> OBJECTID these
> OBJECTID methods
> '.'
> '*'
> '*'
> TYPEID There
> OBJECTID are
> OBJECTID basically
> OBJECTID two
> OBJECTID ways
> OF
> OBJECTID getting
> OBJECTID access
> OBJECTID to
> TYPEID IO
> IN
> OBJECTID a
> CLASS
> TYPEID C
> '.'
> '*'
> '*'
> INT_CONST 1
> ')'
> TYPEID Define
> TYPEID C
> OBJECTID to
> TYPEID Inherit
> OBJECTID from
> TYPEID IO
> '.'
> TYPEID This
> OBJECTID way
> OBJECTID the
> TYPEID IO
> OBJECTID methods
> OBJECTID become
> '*'
> OBJECTID methods
> OF
> TYPEID C
> ','
> OBJECTID and
> OBJECTID they
> OBJECTID can
> OBJECTID be
> OBJECTID called
> OBJECTID using
> OBJECTID the
> OBJECTID abbreviated
> '*'
> OBJECTID dispatch
> ','
> OBJECTID i
> '.'
> OBJECTID e
> '.'
> '*'
> '*'
> CLASS
> TYPEID C
> INHERITS
> TYPEID IO
> OBJECTID is
> '*'
> '.'
> '.'
> '.'
> '*'
> OBJECTID out
> LEXER BUG - UNMATCHED: _
> OBJECTID string
> '('
> STR_CONST "Hello world\\n"
> ')'
> '*'
> '.'
> '.'
> '.'
> '*'
> OBJECTID end
> ';'
> '*'
> '*'
> INT_CONST 2
> ')'
> IF
> OBJECTID your
> CLASS
> TYPEID C
> OBJECTID does
> NOT
> OBJECTID directly
> OBJECTID or
> OBJECTID indirectly
> OBJECTID inherit
> OBJECTID from
> '*'
> TYPEID IO
> ','
> OBJECTID the
> OBJECTID best
> OBJECTID way
> OBJECTID to
> OBJECTID access
> TYPEID IO
> OBJECTID is
> OBJECTID through
> OBJECTID an
> OBJECTID initialized
> '*'
> OBJECTID attribute
> OF
> OBJECTID type
> TYPEID IO
> '.'
> '*'
> '*'
> CLASS
> TYPEID C
> INHERITS
> TYPEID Foo
> OBJECTID is
> '*'
> OBJECTID io
> ':'
> TYPEID IO
> ASSIGN
> OBJECTID new
> TYPEID IO
> ';'
> '*'
> '.'
> '.'
> '.'
> '*'
> OBJECTID io
> '.'
> OBJECTID out
> LEXER BUG - UNMATCHED: _
> OBJECTID string
> '('
> STR_CONST "Hello world\\n"
> ')'
> ';'
> '*'
> '.'
> '.'
> '.'
> '*'
> OBJECTID end
> ';'
> '*'
> '*'
> TYPEID Approach
> INT_CONST 1
> ')'
> OBJECTID is
> OBJECTID most
> OBJECTID often
> OBJECTID used
> ','
> IN
> OBJECTID particular
> OBJECTID when
> OBJECTID you
> OBJECTID need
> TYPEID IO
> '*'
> OBJECTID functions
> IN
> OBJECTID the
> TYPEID Main
> CLASS
> '.'
> '*'
> '*'
> ')'
3a341,359
> '-'
> '-'
> TYPEID Let
> LEXER BUG - UNMATCHED: '
> OBJECTID s
> OBJECTID assume
> OBJECTID that
> OBJECTID we
> OBJECTID don
> LEXER BUG - UNMATCHED: '
> OBJECTID t
> OBJECTID want
> TYPEID A
> OBJECTID to
> NOT
> OBJECTID inherit
> OBJECTID from
> TYPEID IO
> '.'
8c364
< NEW
---
> OBJECTID new
11c367,369
< OBJECTID out_a
---
> OBJECTID out
> LEXER BUG - UNMATCHED: _
> OBJECTID a
19c377,379
< OBJECTID out_string
---
> OBJECTID out
> LEXER BUG - UNMATCHED: _
> OBJECTID string
21c381
< STR_CONST "A: Hello world\n"
---
> STR_CONST "A: Hello world\\n"
32c392,412
< OBJECTID out_b
---
> '-'
> '-'
> TYPEID B
> OBJECTID does
> NOT
> OBJECTID have
> OBJECTID to
> OBJECTID an
> OBJECTID extra
> OBJECTID attribute
> ','
> OBJECTID since
> OBJECTID it
> INHERITS
> OBJECTID io
> OBJECTID from
> TYPEID A
> '.'
> OBJECTID out
> LEXER BUG - UNMATCHED: _
> OBJECTID b
40c420,422
< OBJECTID out_string
---
> OBJECTID out
> LEXER BUG - UNMATCHED: _
> OBJECTID string
42c424
< STR_CONST "B: Hello world\n"
---
> STR_CONST "B: Hello world\\n"
53c435,448
< OBJECTID out_c
---
> '-'
> '-'
> TYPEID Now
> OBJECTID the
> TYPEID IO
> OBJECTID methods
> OBJECTID are
> OBJECTID part
> OF
> TYPEID C
> '.'
> OBJECTID out
> LEXER BUG - UNMATCHED: _
> OBJECTID c
59c454,456
< OBJECTID out_string
---
> OBJECTID out
> LEXER BUG - UNMATCHED: _
> OBJECTID string
61c458
< STR_CONST "C: Hello world\n"
---
> STR_CONST "C: Hello world\\n"
64a462,488
> '-'
> '-'
> TYPEID Note
> OBJECTID that
> OBJECTID out
> LEXER BUG - UNMATCHED: _
> OBJECTID string
> '('
> '.'
> '.'
> '.'
> ')'
> OBJECTID is
> OBJECTID just
> OBJECTID a
> OBJECTID shorthand
> OBJECTID for
> OBJECTID self
> '.'
> OBJECTID out
> LEXER BUG - UNMATCHED: _
> OBJECTID string
> '('
> '.'
> '.'
> '.'
> ')'
72c496,506
< OBJECTID out_d
---
> '-'
> '-'
> INHERITS
> TYPEID IO
> OBJECTID methods
> OBJECTID from
> TYPEID C
> '.'
> OBJECTID out
> LEXER BUG - UNMATCHED: _
> OBJECTID d
78c512,514
< OBJECTID out_string
---
> OBJECTID out
> LEXER BUG - UNMATCHED: _
> OBJECTID string
80c516
< STR_CONST "D: Hello world\n"
---
> STR_CONST "D: Hello world\\n"
90a527,534
> '-'
> '-'
> TYPEID Same
> CASE
> OBJECTID as
> CLASS
> TYPEID C
> '.'
99c543
< NEW
---
> OBJECTID new
103c547,549
< OBJECTID out_a
---
> OBJECTID out
> LEXER BUG - UNMATCHED: _
> OBJECTID a
108c554
< NEW
---
> OBJECTID new
112c558,560
< OBJECTID out_b
---
> OBJECTID out
> LEXER BUG - UNMATCHED: _
> OBJECTID b
117c565
< NEW
---
> OBJECTID new
121c569,571
< OBJECTID out_c
---
> OBJECTID out
> LEXER BUG - UNMATCHED: _
> OBJECTID c
126c576
< NEW
---
> OBJECTID new
130c580,582
< OBJECTID out_d
---
> OBJECTID out
> LEXER BUG - UNMATCHED: _
> OBJECTID d
134c586,588
< OBJECTID out_string
---
> OBJECTID out
> LEXER BUG - UNMATCHED: _
> OBJECTID string
136c590
< STR_CONST "Done.\n"
---
> STR_CONST "Done.\\n"
